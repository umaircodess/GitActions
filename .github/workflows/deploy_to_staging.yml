name: Deploy to another org

on:
  pull_request:
   branches: [main]

jobs:
  deploy_to_staging:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.2
      with:
          fetch-depth: 0
                # Install Node
    - name: Node
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'
        check-latest: true
      # Install Salesforce CLI
    - name: Install Salesforce CLI
      run: |
       sudo npm install @salesforce/cli --global

    - name: Extract files to deploy to staging
      shell: bash
      run: |
        echo "notdeletedfiles=$(git --no-pager diff --name-only --dif-filter=d origin/${{ github.base_ref }} -- force-app | tr '\n' ',' | sed 's/,/, /g' | sed 's/\(.*\),/\1 /')" >> $GITHUB_ENV
        echo "deletedfiles=$(git --no-pager diff --name-only --dif-filter=acmr origin/${{ github.base_ref }} -- force-app | tr '\n' ',' | sed 's/,/, /g' | sed 's/\(.*\),/\1 /')" >> $GITHUB_ENV


    - name: "Populate auth file with SFDX_URL secret of integration org"
      shell: bash
      run: |
        echo ${{ secrets.URL}} > ./SFDX_AUTH_URL.txt          
    - name: 'Authenticate to Org'
      run: sfdx auth:sfdxurl:store -f ./SFDX_AUTH_URL.txt -s -a integration
    - name: 'Deploy to Staging'
      run: sfdx force:source:deploy -c -p "${{ env.notdeletedfiles}}" -l RunLocalTests

    - run: $([ $? -eq 0 ]  || exit 1)

      if: ${{ env.MY_ENV_VARIABLE != '' }}
    - name: 'Deploy deleted files to Staging'
      run: sfdx force:source:delete -c -p "${{ env.deletedfiles}}"